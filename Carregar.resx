<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Imagem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJYAAACWCAYAAAA8AXHiAAAABGdBTUEAALGPC/xhBQAABixJREFUeF7t
        2kGOG0kMRNG+oi/vQ/QlPBuuhAfYnrCILGV84C9ZYkZwqa9SSimllFJKKaWUUkoppZRSSimllFJK+Uu+
        v79//Uvns+V2dByJ89lyOzqOxPlsuR0dR+J8ttyOjiNxPltuR8eROJ8tt6PjSJzPltvRcSTOZ8vt6DgS
        57PldnQcifPZ8qmo9JOcNcvTUJknOWuWp6EyT3LWLE9DZZ7krFmehso8yVmzPA2VeZKzZnkaKvMkZ83y
        NFTmSc6a5WmozJOcNcvTUJknOWuWU1BJiT9//vyn6jcS59nl3Sj8RB1Hon4jcZ5d3o3CT9RxJOo3EufZ
        5d0o/EQdR6J+I3GeXd6Nwk/UcSTqNxLn2eXdKPxEHUeifiNxnl3ejcJP1HEk6jcS59nl3Sj8RB1Hon4j
        cZ5d3o3CT9RxJOo3EufZ5d0o/EQdR6J+I3GeXV5RWIkqU2pWanZD7ZI4cd+DQkhUSVKzUrMbapfEifse
        FEKiSpKalZrdULskTtz3oBASVZLUrNTshtolceK+B4WQqJKkZqVmN9QuiRP3PSiERJUkNSs1u6F2SZy4
        70EhJKokqVmp2Q21S+LEfQ8KIVElSc1KzW6oXRIn7ntQCIkqSWpWanZD7ZI4cd+DQkhUSVKzUrMbapfE
        iftctHSiQt1Qu0jNnqR2Tpya99EyiQprQ+0iNXuS2jlxat5HyyQqrA21i9TsSWrnxKl5Hy2TqLA21C5S
        syepnROn5n20TKLC2lC7SM2epHZOnJr30TKJCmtD7SI1e5LaOXFq3kfLJCqsDbWL1OxJaufEqXkfLZOo
        sDbULlKzJ6mdE6fmfbRMosLaULtIzZ6kdk6cmvfRMokKa0PtIjV7kto5cWr+PRpO1OM+WWUgNfvJ9rBC
        lYHU7CfbwwpVBlKzn2wPK1QZSM1+sj2sUGUgNfvJ9rBClYHU7CfbwwpVBlKzn2wPK1QZSM1+sj2sUGUg
        NfvJ9rBClYHU7Cf79ePHj19/ooZPUmVKzZ6kdpaaTVTniT2sw9TOUrOJ6jyxh3WY2llqNlGdJ/awDlM7
        S80mqvPEHtZhamep2UR1ntjDOkztLDWbqM4Te1iHqZ2lZhPVeWIP6zC1s9RsojpP7GEdpnaWmk1U54k9
        rMPUzlKzieo8cf75/ns0LLX0SaokqdkNtUuiOpJT8z5aRiqsk1T4UrMbapdEdSSn5n20jFRYJ6nwpWY3
        1C6J6khOzftoGamwTlLhS81uqF0S1ZGcmvfRMlJhnaTCl5rdULskqiM5Ne+jZaTCOkmFLzW7oXZJVEdy
        at5Hy0iFdZIKX2p2Q+2SqI7k1LyPlpEK6yQVvtTshtolUR3JqXkfLSMV1kkqfKnZDbVLojqSU/M+WkYq
        rJNU+FKzG2qXRHUkp+Zz0dJSoW6o8KVmN9QuUpnKqeX56HFSoW6okqRmN9QuUpnKqeX56HFSoW6okqRm
        N9QuUpnKqeX56HFSoW6okqRmN9QuUpnKqeX56HFSoW6okqRmN9QuUpnKqeX56HFSoW6okqRmN9QuUpnK
        qeX56HFSoW6okqRmN9QuUpnKqeX56HFSoW6okqRmN9QuUpnKqeX56HFSoW6okqRmN9QuUpnKqeX56HFS
        oW6okqRmN9QuUpnKqeUeFIJUqIkqc0O9LXFiLK8oLKnjSFTpG+ptiRNjeUVhSR1HokrfUG9LnBjLKwpL
        6jgSVfqGelvixFheUVhSx5Go0jfU2xInxvKKwpI6jkSVvqHeljgxllcUltRxJKr0DfW2xImxvKKwpI4j
        UaVvqLclTozlFYUldRyJKn1DvS1xYiyvKCyp40hU6RvqbYkTY/m/KFSpMhP1G4nznHIKKknqOBL1G4nz
        nHIKKknqOBL1G4nznHIKKknqOBL1G4nznHIKKknqOBL1G4nznHIKKknqOBL1G4nznHIKKknqOBL1G4nz
        nHIKKknqOBL1G4nznHIKKknqOBL1G4nznHIKKknqOBL1G4nznPI0VGbifLbcjo4jcT5bbkfHkTifLbej
        40icz5bb0XEkzmfL7eg4Euez5XZ0HInz2XI7Oo7E+Wy5HR1H4ny23I6OI3E+W0oppZRSSimllFJKKaWU
        UkoppZRSSil/xtfXf5WQssuOulaEAAAAAElFTkSuQmCC
</value>
  </data>
</root>